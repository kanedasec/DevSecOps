
name: Dependencies Scan
on:
  workflow_call:

permissions:
  contents: read
  security-events: write  # üëà REQUIRED for uploading SARIF

jobs:
  container_and_sca_scan:
    name: üê≥ Container and Dependency Scan (Trivy)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      # - name: Install Trivy
      #   run: |
      #     curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
      #     sudo mv ./bin/trivy /usr/local/bin/trivy

      # - name: Install dependencies (for Trivy FS scan)
      #   run:  if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # - name: Build Docker image manually
      #   run: |
      #     docker build -t flask-app:latest -f docker/flask.dockerfile .

      # - name: Scan Docker image
      #   continue-on-error: true
      #   run: |
      #     trivy image --format json --output trivy_image.json --severity HIGH,CRITICAL flask-app || true

      # - name: Scan Repository Dependencies
      #   continue-on-error: true
      #   run: |
      #     trivy repository \
      #       --format json \
      #       --output trivy_repository_scan.json \
      #       --severity HIGH,CRITICAL \
      #       github.com/kanedasec/DevSecOps || true

      # - name: Upload Trivy Reports
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: trivy-reports
      #     path: |
      #       trivy_image.json
      #       trivy_repository_scan.json